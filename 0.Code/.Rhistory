require(foreign)
require(plm)
require(lmtest)
require(data.table)
FM_Date = fread('FM-Data.csv')
colnames(FM_Data)
FM_Data = fread('FM-Data.csv')
FM_Data = fread('FM-Data.csv')
colnames(FM_Data)
used_xs = c("mvel1","mom1m","mom12m","beta","LogBM","Combined")
used_xs = "mvel1+mom1m+mom12m+beta+LogBM+Combined"
paste0("RET~",used_xs)
fpmg = pmg(paste0("RET~",used_xs), FM_Data, index=c("DATE","permno"))
table(index(FM_Data), useNA = "ifany")
FM_Data = fread('FM-Data.csv')
fpmg = pmg(paste0("RET~",used_xs), FM_Data, index=c("DATE","permno"))
fpmg = pmg(RET~mvel1+mom1m+mom12m+beta+LogBM+Combined, FM_Data, index=c("DATE","permno"))
vcovDC <- function(x, ...){
vcovHC(x, cluster="group", ...) + vcovHC(x, cluster="time", ...) -
vcovHC(x, method="white1", ...)
}
coeftest(fpmg)
fpmg = pmg(RET~mvel1+mom1m+mom12m+LogBM+Combined, FM_Data, index=c("DATE","permno"))
coeftest(fpmg)
fpmg = pmg(RET~mvel1+mom1m+mom12m+LogBM+MDA, FM_Data, index=c("DATE","permno"))
coeftest(fpmg)
fpmg = pmg(RET~beta+mvel1+mom1m+mom12m+LogBM+MDA, FM_Data, index=c("DATE","permno"))
res_test = coeftest(fpmg)
res_test
colnames(FM)
colnames(FM_Data)
sim_x = sim_xs[1]
basic_xs = c("mvel1","mom1m","mom12m","beta","LogBM")
sim_xs = c("MDA","RiskFactors","Disclosures","LegalProceedings","Combined")
sim_x = sim_xs[1]
formula1 = as.formula(paste('RET',
paste(c(sim_x,basic_xs), collapse = " + "),
sep = " ~ "))
formula()
formula1
formula2 = as.formula(paste('RET', sim_x,sep = " ~ "))
fpmg = pmg(formula1, FM_Data, index=c("DATE","permno"))
r2_test = summary(fpmg)
r2_test$r.squared
res_test = coeftest(fpmg)
res_test
fwrite(as.data.table(res_test),'MDA-test.csv')
res_test
res_test = as.data.frame(coeftest(fpmg))
capture.output(res_test, file="test.txt")
fpmg2 = pmg(formula2, FM_Data, index=c("DATE","permno"))
res_test2 = coeftest(fpmg2)
res_test2
formula2 = as.formula(paste('RET', paste(c("beta",sim_x),"+"),sep = " ~ "))
formula2 = as.formula(paste('RET', sim_x,sep = " ~ "))
fpmg2 = pmg(formula2, FM_Data, index=c("DATE","permno"))
res_test2 = coeftest(fpmg2)
res_test1[,1]
fpmg1 = pmg(formula1, FM_Data, index=c("DATE","permno"))
res_test1 = coeftest(fpmg1)
res_test1[,1]
require(foreign)
require(plm)
require(lmtest)
require(data.table)
FM_Data = fread('FM-Data.csv')
basic_xs = c("mvel1","mom1m","mom12m","beta","LogBM")
sim_xs = c("MDA","RiskFactors","Disclosures","LegalProceedings","Combined")
for (sim_x in sim_xs){
formula1 = as.formula(paste('RET',
paste(c(sim_x,basic_xs), collapse = " + "),
sep = " ~ "))
formula2 = as.formula(paste('RET', sim_x,sep = " ~ "))
fpmg1 = pmg(formula1, FM_Data, index=c("DATE","permno"))
res_test1 = coeftest(fpmg1)
capture.output(res_test1, file=paste0(sim_x,".txt"))
#fpmg2 = pmg(formula2, FM_Data, index=c("DATE","permno"))
#res_test2 = coeftest(fpmg2)
#fwrite(as.data.table(res_test),'MDA-test.csv')
}
View(FM_Data)
var(FM_Data$RiskFactors)
FM_Data = FM_Data[FM_Data$DATE>'2001-12-31',]
basic_xs = c("mvel1","mom1m","mom12m","beta","LogBM")
sim_xs = c("MDA","RiskFactors","Disclosures","LegalProceedings","Combined")
for (sim_x in sim_xs){
formula1 = as.formula(paste('RET',
paste(c(sim_x,basic_xs), collapse = " + "),
sep = " ~ "))
formula2 = as.formula(paste('RET', sim_x,sep = " ~ "))
fpmg1 = pmg(formula1, FM_Data, index=c("DATE","permno"))
res_test1 = coeftest(fpmg1)
capture.output(res_test1, file=paste0(sim_x,".txt"))
#fpmg2 = pmg(formula2, FM_Data, index=c("DATE","permno"))
#res_test2 = coeftest(fpmg2)
#fwrite(as.data.table(res_test),'MDA-test.csv')
}
FM_Data = FM_Data[FM_Data$DATE>'2005-12-31',]
basic_xs = c("mvel1","mom1m","mom12m","beta","LogBM")
sim_xs = c("MDA","RiskFactors","Disclosures","LegalProceedings","Combined")
for (sim_x in sim_xs){
formula1 = as.formula(paste('RET',
paste(c(sim_x,basic_xs), collapse = " + "),
sep = " ~ "))
formula2 = as.formula(paste('RET', sim_x,sep = " ~ "))
fpmg1 = pmg(formula1, FM_Data, index=c("DATE","permno"))
res_test1 = coeftest(fpmg1)
capture.output(res_test1, file=paste0(sim_x,".txt"))
#fpmg2 = pmg(formula2, FM_Data, index=c("DATE","permno"))
#res_test2 = coeftest(fpmg2)
#fwrite(as.data.table(res_test),'MDA-test.csv')
}
